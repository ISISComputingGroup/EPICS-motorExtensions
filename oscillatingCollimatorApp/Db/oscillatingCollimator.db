# (LET) Radial oscillating collimator
#
#  Record that allows calculation of the XY position of a beamstop
#  from w-theta coordinates. For more info see the wiki.
#
#  Macros:
#    P - base name for ioc
#    MTR - Target motor

# Start/stop

record(bo, "$(P)$(O):START:SP") {
}

record(bo, "$(P)$(O):STOP:SP") {
}

# Motor position

record(calcout, "$(P)$(O):POS:_CALC") {
	field(SCAN, "1 second")
	field(INPA, "$(P)$(M).RBV")
	field(INPB, "$(P)$(O):RADIUS")
	field(CALC, "R2D*ATAN(A/B)")
	field(OUT, "$(P)$(O):POS PP")	
	field(OOPT, "Every Time")
}

record(ai, "$(P)$(O):POS") {
    field(PREC, "2")
    field(EGU, "deg")
}

record(ai, "$(P)$(O):POS:SP") {
    field(PREC, "2")
    field(EGU, "deg")
    field(VAL, "-1")
	field(FLNK, "$(P)$(O):POS:SP:_CALC")
}

record(calcout, "$(P)$(O):POS:SP:_CALC") {
	field(INPA, "$(P)$(O):POS:SP")
	field(INPB, "$(P)$(O):RADIUS")
	field(CALC, "B*TAN(A/R2D)")
	field(OUT, "$(P)$(M).VAL PP")
	field(OOPT, "Every Time")
}

alias("$(P)$(O):POS:SP", "$(P)$(O):POS:SP:RBV")

# Operating mode

record(mbbi, "$(P)$(O):MODE") {
    field(INP, "$(P)$(O):MODE:_READ")
	field(ZRST, "Initializing")
	field(ONST, "Homing")
	field(TWST, "Oscillating")
}
alias("$(P)$(O):MODE", "$(P)$(O):MODE:SP")
alias("$(P)$(O):MODE", "$(P)$(O):MODE:SP:RBV")

# Frequency

record(calcout, "$(P)$(O):FREQ:_CALC") {
	field(INPA, "$(P)$(O):TIME")
	field(CALC, "1/A")
	field(OUT, "$(P)$(O):FREQ PP")
	field(OOPT, "Every Time")
}

record(ai, "$(P)$(O):FREQ") {
    field(PREC, "2")
    field(EGU, "Hz")
}

# Cycle

record(ai, "$(P)$(O):CYCLE") {
    field(EGU, "")
    field(PREC, "0")
    field(INP, "$(P)$(O):COUNT:_READ")
}

# Mounting radius

record(ai, "$(P)$(O):RADIUS") {
    field(EGU, "mm")
    field(PREC, "2")
    field(VAL, "-1")
	field(FLNK, "$(P)$(O):ANGLE:_TRIG")
}
alias("$(P)$(O):RADIUS", "$(P)$(O):RADIUS:SP")
alias("$(P)$(O):RADIUS", "$(P)$(O):RADIUS:SP:RBV")

# Motor steps

record(calcout, "$(P)$(O):STEPS:_CALC") {
	field(SCAN, "1 second")
	field(INPA, "$(P)$(M).MRES")
	field(CALC, "1/A")
	field(OUT, "$(P)$(O):STEPS PP")
	field(EGU, "mm")
}

record(ai, "$(P)$(O):STEPS") {
	field(DESC, "Motor steps per mm")
    field(EGU, "1/mm")
    field(PREC, "0")
}
alias("$(P)$(O):STEPS", "$(P)$(O):STEPS:SP")
alias("$(P)$(O):STEPS", "$(P)$(O):STEPS:SP:RBV")

# Thread

record(ai, "$(P)$(O):THREAD") {
    field(EGU, "")
    field(PREC, "0")
    field(VAL, "-1")
}
alias("$(P)$(O):THREAD", "$(P)$(O):THREAD:SP")
alias("$(P)$(O):THREAD", "$(P)$(O):THREAD:SP:RBV")

# Swept angle

record(ao, "$(P)$(O):ANGLE:SP") {
    field(EGU, "deg")
    field(PREC, "2")
    field(VAL, "0")
	field(PINI, "YES")
	field(FLNK, "$(P)$(O):ANGLE:_TRIG")
}

record(fanout, "$(P)$(O):ANGLE:_TRIG") {
	field(LNK1, "$(P)$(O):DIST:PART")
}

record(calc, "$(P)$(O):DIST:PART") {
	field(INPA, "$(P)$(O):RADIUS")
	field(INPB, "$(P)$(O):STEPS")
	field(INPC, "$(P)$(O):ANGLE:SP")
	field(CALC, "2*A*B*TAN(C*D2R)")
	field(FLNK, "$(P)$(O):CYCLE:TIME:HALF")
    field(EGU, "steps")
    field(PREC, "0")
}

record(calc, "$(P)$(O):CYCLE:TIME:HALF") {
	field(INPA, "$(P)$(O):FREQ")
	field(CALC, "1/(2*A)")
	field(FLNK, "$(P)$(O):ACC")
    field(EGU, "s")
    field(PREC, "2")
}

record(ao, "$(P)$(O):ACC") {
	field(VAL, "49152")
	field(FLNK, "$(P)$(O):VEL")
    field(EGU, "steps/s/s")
    field(PREC, "0")
}

record(calc, "$(P)$(O):VEL") {
	field(INPA, "$(P)$(O):ACC")
	field(INPB, "$(P)$(O):DIST:PART")
	field(INPC, "$(P)$(O):CYCLE:TIME:HALF")
	field(CALC, "A*(C-SQR(C*C-8*B/A))/4")
	field(FLNK, "$(P)$(O):TIME:ACC")
    field(EGU, "steps/s")
    field(PREC, "0")
}

record(calc, "$(P)$(O):TIME:ACC") {
	field(INPA, "$(P)$(O):ACC")
	field(INPB, "$(P)$(O):VEL")
	field(CALC, "B/A")
	field(FLNK, "$(P)$(O):TIME:VEL")
    field(EGU, "s")
    field(PREC, "2")
}

record(calc, "$(P)$(O):TIME:VEL") {
	field(INPA, "$(P)$(O):DIST:PART")
	field(INPB, "$(P)$(O):VEL")
	field(CALC, "A/B")
	field(FLNK, "$(P)$(O):TIME:TOTAL")
    field(EGU, "s")
    field(PREC, "2")
}

record(calc, "$(P)$(O):TIME:TOTAL") {
	field(INPA, "$(P)$(O):TIME:ACC")
	field(INPB, "$(P)$(O):TIME:VEL")
	field(CALC, "2*A+B")
	field(FLNK, "$(P)$(O):DIST:VEL")
    field(EGU, "s")
    field(PREC, "2")
}

record(calc, "$(P)$(O):DIST:VEL") {
	field(INPA, "$(P)$(O):ACC")
	field(INPB, "$(P)$(O):VEL")
	field(CALC, "B*B/A")
	field(FLNK, "$(P)$(O):DIST:TOTAL")
    field(EGU, "steps")
    field(PREC, "2")
}

record(calc, "$(P)$(O):DIST:TOTAL") {
	field(INPA, "$(P)$(O):DIST:VEL")
	field(INPB, "$(P)$(O):DIST:PART")
	field(CALC, "2*A+B")
    field(EGU, "steps")
    field(PREC, "2")
}

alias("$(P)$(O):ANGLE:SP", "$(P)$(O):ANGLE")
alias("$(P)$(O):ANGLE:SP", "$(P)$(O):ANGLE:SP:RBV")

# Variables read directly from the Galil program

record(ai, "$(P)$(O):TIME") {
	field(SCAN, "1 second")
	field(VAL, "10")
	field(PINI, "YES")
	field(FLNK, "$(P)$(O):FREQ:_CALC")
}

record(ai, "$(P)$(O):MODE:_READ") {
	field(SCAN, "1 second")
	field(VAL, "1")
	field(PINI, "YES")
	field(FLNK, "$(P)$(O):MODE")
}

record(ai, "$(P)$(O):COUNT:_READ") {
	field(SCAN, "1 second")
	field(VAL, "9999")
	field(PINI, "YES")
	field(FLNK, "$(P)$(O):CYCLE")
}